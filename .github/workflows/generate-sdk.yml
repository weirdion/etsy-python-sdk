name: Regenerate SDK

on:
  workflow_dispatch:

permissions:
  contents: write  # Allow writing to the repository for committing changes
  pull-requests: write  # Allow writing to pull requests for creating PRs

jobs:
  generate-sdk:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: make install

      - name: Clean existing SDK
        run: make clean

      - name: Generate SDK
        run: make generate

      - name: Run tests
        run: make test

      - name: Commit and push changes
        id: commit_and_push
        env:
          GITHUB_TOKEN: ${{ secrets.ETSY_SDK_GITHUB_TOKEN }}
        run: |
          export TAG_TIMESTAMP=$(date +'%Y-%m-%d-%H%M%S')
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          BRANCH_NAME="chore/regenerate-sdk-$TAG_TIMESTAMP"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          echo "$TAG_TIMESTAMP" > VERSION
          git checkout -b $BRANCH_NAME
          git add src/ openapi/etsy-openapi.json VERSION
          git commit -m "chore: regenerate SDK from latest OpenAPI spec ($TAG_TIMESTAMP)"
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/weirdion/etsy-python-sdk.git $BRANCH_NAME

      - name: Create Pull Request
        env:
          # gh cli expects GH_TOKEN to be set for authentication
          GH_TOKEN: ${{ secrets.ETSY_SDK_GITHUB_TOKEN }}
        run: |
          if git ls-remote --heads origin ${{env.BRANCH_NAME}} | grep -q ${{env.BRANCH_NAME}}; then
            echo "Creating a PR from ${{env.BRANCH_NAME}} -> main"
            gh pr create --base main --head ${{env.BRANCH_NAME}} \
            --title "chore: regenerate SDK from latest OpenAPI spec (${{ env.TAG_TIMESTAMP }})" \
            --body "This PR regenerates the SDK using the latest OpenAPI spec." \
            --reviewer weirdion
          else
            echo "Branch ${{env.BRANCH_NAME}} does not exist, skipping PR creation."
          fi
